{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x532a3b0E69698BBCc485327B77b4CD61343625e1",
    "txHash": "0x762ac89d7525f0c0d0bacddb0cde3af2227e114b0d474254ceecc685f412ffbe"
  },
  "proxies": [
    {
      "address": "0x34Bbd3E8f046a3D75C231bc9a5f1c949FF683f9a",
      "txHash": "0x9d9b403807d7aab8d3bea4c32cdc59776491dfcbe1ba860de2027ac62ada4d06",
      "kind": "transparent"
    },
    {
      "address": "0xA8b90872120C13f156C1A1E2e95f28Cec1aE86Fd",
      "txHash": "0x924be648760eab80f92bb731cee2f98fa8307ebf85664aab6623ab83822f2a9a",
      "kind": "transparent"
    },
    {
      "address": "0xdC90555D8a3Afe3fb6F99B16Dcc7dDCEAF2B99B9",
      "txHash": "0x4e7552e46719a630481abe87007e227c998278e2c34adf43d72e47c8a93f1b59",
      "kind": "transparent"
    },
    {
      "address": "0x333339Af3Fd48C264D961c5e3d265e3b7053E99c",
      "txHash": "0x041ea2e5fdb7020d355f4ed51c02494bb7d1de83596f55aea087b209f7068b7f",
      "kind": "transparent"
    },
    {
      "address": "0xb7eD03A5488DeaB182eB1f4F9B97ace31A5B1C0F",
      "txHash": "0xc7701985acc5343ac28d5eaf983d0db924639754f455bb69b5865b0eca8d82c3",
      "kind": "transparent"
    },
    {
      "address": "0x353aA4064de3A3b54d7f563fe888aA2c09Ec5d09",
      "txHash": "0xf1d8ef2476e02ef4791acbda238538f3545010c8e95dae13345681c2d9c47dab",
      "kind": "transparent"
    }
  ],
  "impls": {
    "263cbfcedfcffb7280c708310f0ff8c2408e6c79f0359ebda20282576ec55ef4": {
      "address": "0x078c312aA5408df625F30a3021ca43e11438DE57",
      "txHash": "0x78cf88363ea5c96434e3c0570af4c2bdc260725dd2d75d88a23f8499cac3e770",
      "layout": {
        "solcVersion": "0.8.7",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d693f010e7f044449f8b83109c8b2277c63ed1ed0bf3c3265f127d6f1bf2710b": {
      "address": "0xf9C0F6e37959f7E8E6C8840c81C318ABd3f8808D",
      "txHash": "0x8b80d112eabc1c1109c6058492220be1090d1b1f465db9271e0651517a96b67d",
      "layout": {
        "solcVersion": "0.8.7",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a92a910609294581ea5c925a41fb5a5034e4e311cbb93b7c9c11e796aafb55b8": {
      "address": "0x240d958a4697A272d02F0EfFd5eaA705B7FF0E71",
      "txHash": "0x6f3ddd7608503b3ce1a6c3710bf0fdae826e081e1ae66812ee287c53dfc95db4",
      "layout": {
        "solcVersion": "0.8.7",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IERC20Upgradeable)990",
            "contract": "GameV1",
            "src": "contracts/GameV1.sol:18"
          },
          {
            "label": "randomUtils",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IRandomUtils)4074",
            "contract": "GameV1",
            "src": "contracts/GameV1.sol:19"
          },
          {
            "label": "matches",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_array(t_struct(MatchRegister)3659_storage)dyn_storage)",
            "contract": "GameV1",
            "src": "contracts/GameV1.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MatchRegister)3659_storage)dyn_storage": {
            "label": "struct GameV1.MatchRegister[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)990": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomUtils)4074": {
            "label": "contract IRandomUtils",
            "numberOfBytes": "20"
          },
          "t_contract(Match)4455": {
            "label": "contract Match",
            "numberOfBytes": "20"
          },
          "t_enum(Difficulty)3640": {
            "label": "enum GameV1.Difficulty",
            "members": [
              "Easy",
              "Medium",
              "Hard"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(MatchRegister)3659_storage)dyn_storage)": {
            "label": "mapping(address => struct GameV1.MatchRegister[])",
            "numberOfBytes": "32"
          },
          "t_struct(MatchRegister)3659_storage": {
            "label": "struct GameV1.MatchRegister",
            "members": [
              {
                "label": "matchContract",
                "type": "t_contract(Match)4455",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "difficulty",
                "type": "t_enum(Difficulty)3640",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "awardRequested",
                "type": "t_bool",
                "offset": 21,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
