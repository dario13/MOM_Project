/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MOMToken,
  MOMTokenInterface,
} from "../../../contracts/MOMtoken.sol/MOMToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018e4380380620018e4833981810160405281019062000037919062000393565b6040518060400160405280600c81526020017f4d616a6f724f724d696e6f7200000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d4f4d00000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb929190620002b5565b508060049080519060200190620000d4929190620002b5565b505050620000e982826200013260201b60201c565b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620005f3565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200019c9062000412565b60405180910390fd5b620001b960008383620002ab60201b60201c565b8060026000828254620001cd919062000462565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825462000224919062000462565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200028b919062000434565b60405180910390a3620002a760008383620002b060201b60201c565b5050565b505050565b505050565b828054620002c390620004fd565b90600052602060002090601f016020900481019282620002e7576000855562000333565b82601f106200030257805160ff191683800117855562000333565b8280016001018555821562000333579182015b828111156200033257825182559160200191906001019062000315565b5b50905062000342919062000346565b5090565b5b808211156200036157600081600090555060010162000347565b5090565b6000815190506200037681620005bf565b92915050565b6000815190506200038d81620005d9565b92915050565b60008060408385031215620003ad57620003ac62000591565b5b6000620003bd8582860162000365565b9250506020620003d0858286016200037c565b9150509250929050565b6000620003e9601f8362000451565b9150620003f68262000596565b602082019050919050565b6200040c81620004f3565b82525050565b600060208201905081810360008301526200042d81620003da565b9050919050565b60006020820190506200044b600083018462000401565b92915050565b600082825260208201905092915050565b60006200046f82620004f3565b91506200047c83620004f3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620004b457620004b362000533565b5b828201905092915050565b6000620004cc82620004d3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060028204905060018216806200051657607f821691505b602082108114156200052d576200052c62000562565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b620005ca81620004bf565b8114620005d657600080fd5b50565b620005e481620004f3565b8114620005f057600080fd5b50565b6112e180620006036000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a3578063893d20e8146101d357806395d89b41146101f1578063a457c2d71461020f578063a9059cbb1461023f578063dd62ed3e1461026f576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c161029f565b6040516100ce9190610da2565b60405180910390f35b6100f160048036038101906100ec9190610bc2565b610331565b6040516100fe9190610d87565b60405180910390f35b61010f610354565b60405161011c9190610ea4565b60405180910390f35b61013f600480360381019061013a9190610b6f565b61035e565b60405161014c9190610d87565b60405180910390f35b61015d61038d565b60405161016a9190610ebf565b60405180910390f35b61018d60048036038101906101889190610bc2565b610392565b60405161019a9190610d87565b60405180910390f35b6101bd60048036038101906101b89190610b02565b6103c9565b6040516101ca9190610ea4565b60405180910390f35b6101db610411565b6040516101e89190610d6c565b60405180910390f35b6101f961043b565b6040516102069190610da2565b60405180910390f35b61022960048036038101906102249190610bc2565b6104cd565b6040516102369190610d87565b60405180910390f35b61025960048036038101906102549190610bc2565b610544565b6040516102669190610d87565b60405180910390f35b61028960048036038101906102849190610b2f565b610567565b6040516102969190610ea4565b60405180910390f35b6060600380546102ae90610fd4565b80601f01602080910402602001604051908101604052809291908181526020018280546102da90610fd4565b80156103275780601f106102fc57610100808354040283529160200191610327565b820191906000526020600020905b81548152906001019060200180831161030a57829003601f168201915b5050505050905090565b60008061033c6105ee565b90506103498185856105f6565b600191505092915050565b6000600254905090565b6000806103696105ee565b90506103768582856107c1565b61038185858561084d565b60019150509392505050565b600090565b60008061039d6105ee565b90506103be8185856103af8589610567565b6103b99190610ef6565b6105f6565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461044a90610fd4565b80601f016020809104026020016040519081016040528092919081815260200182805461047690610fd4565b80156104c35780601f10610498576101008083540402835291602001916104c3565b820191906000526020600020905b8154815290600101906020018083116104a657829003601f168201915b5050505050905090565b6000806104d86105ee565b905060006104e68286610567565b90508381101561052b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052290610e84565b60405180910390fd5b61053882868684036105f6565b60019250505092915050565b60008061054f6105ee565b905061055c81858561084d565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d90610e64565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156106d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cd90610de4565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107b49190610ea4565b60405180910390a3505050565b60006107cd8484610567565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108475781811015610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083090610e04565b60405180910390fd5b61084684848484036105f6565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b490610e44565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561092d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092490610dc4565b60405180910390fd5b610938838383610ace565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b590610e24565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a519190610ef6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ab59190610ea4565b60405180910390a3610ac8848484610ad3565b50505050565b505050565b505050565b600081359050610ae78161127d565b92915050565b600081359050610afc81611294565b92915050565b600060208284031215610b1857610b17611064565b5b6000610b2684828501610ad8565b91505092915050565b60008060408385031215610b4657610b45611064565b5b6000610b5485828601610ad8565b9250506020610b6585828601610ad8565b9150509250929050565b600080600060608486031215610b8857610b87611064565b5b6000610b9686828701610ad8565b9350506020610ba786828701610ad8565b9250506040610bb886828701610aed565b9150509250925092565b60008060408385031215610bd957610bd8611064565b5b6000610be785828601610ad8565b9250506020610bf885828601610aed565b9150509250929050565b610c0b81610f4c565b82525050565b610c1a81610f5e565b82525050565b6000610c2b82610eda565b610c358185610ee5565b9350610c45818560208601610fa1565b610c4e81611069565b840191505092915050565b6000610c66602383610ee5565b9150610c718261107a565b604082019050919050565b6000610c89602283610ee5565b9150610c94826110c9565b604082019050919050565b6000610cac601d83610ee5565b9150610cb782611118565b602082019050919050565b6000610ccf602683610ee5565b9150610cda82611141565b604082019050919050565b6000610cf2602583610ee5565b9150610cfd82611190565b604082019050919050565b6000610d15602483610ee5565b9150610d20826111df565b604082019050919050565b6000610d38602583610ee5565b9150610d438261122e565b604082019050919050565b610d5781610f8a565b82525050565b610d6681610f94565b82525050565b6000602082019050610d816000830184610c02565b92915050565b6000602082019050610d9c6000830184610c11565b92915050565b60006020820190508181036000830152610dbc8184610c20565b905092915050565b60006020820190508181036000830152610ddd81610c59565b9050919050565b60006020820190508181036000830152610dfd81610c7c565b9050919050565b60006020820190508181036000830152610e1d81610c9f565b9050919050565b60006020820190508181036000830152610e3d81610cc2565b9050919050565b60006020820190508181036000830152610e5d81610ce5565b9050919050565b60006020820190508181036000830152610e7d81610d08565b9050919050565b60006020820190508181036000830152610e9d81610d2b565b9050919050565b6000602082019050610eb96000830184610d4e565b92915050565b6000602082019050610ed46000830184610d5d565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610f0182610f8a565b9150610f0c83610f8a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f4157610f40611006565b5b828201905092915050565b6000610f5782610f6a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610fbf578082015181840152602081019050610fa4565b83811115610fce576000848401525b50505050565b60006002820490506001821680610fec57607f821691505b6020821081141561100057610fff611035565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61128681610f4c565b811461129157600080fd5b50565b61129d81610f8a565b81146112a857600080fd5b5056fea2646970667358221220fc2829a2574cbea2aff0742ac684e9428bea67ccd83ad001c5314de7f12c36d164736f6c63430008070033";

type MOMTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MOMTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MOMToken__factory extends ContractFactory {
  constructor(...args: MOMTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenOwner: PromiseOrValue<string>,
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MOMToken> {
    return super.deploy(
      tokenOwner,
      initialSupply,
      overrides || {}
    ) as Promise<MOMToken>;
  }
  override getDeployTransaction(
    tokenOwner: PromiseOrValue<string>,
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tokenOwner,
      initialSupply,
      overrides || {}
    );
  }
  override attach(address: string): MOMToken {
    return super.attach(address) as MOMToken;
  }
  override connect(signer: Signer): MOMToken__factory {
    return super.connect(signer) as MOMToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MOMTokenInterface {
    return new utils.Interface(_abi) as MOMTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MOMToken {
    return new Contract(address, _abi, signerOrProvider) as MOMToken;
  }
}
