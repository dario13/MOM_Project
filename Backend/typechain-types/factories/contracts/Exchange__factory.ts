/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Exchange, ExchangeInterface } from "../../contracts/Exchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Bought",
    type: "event",
  },
  {
    inputs: [],
    name: "buyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositWei",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeiBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumAmountToExchange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimumAmountToExchange",
        type: "uint256",
      },
    ],
    name: "setMinimumAmountToExchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weiBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "destAddr",
        type: "address",
      },
    ],
    name: "withdrawWei",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d0838038062001d088339818101604052810190620000379190620000fc565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550655af3107a40006001819055505050620001c4565b600081519050620000df8162000190565b92915050565b600081519050620000f681620001aa565b92915050565b600080604083850312156200011657620001156200018b565b5b60006200012685828601620000ce565b92505060206200013985828601620000e5565b9150509250929050565b600062000150826200016b565b9050919050565b6000620001648262000143565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200019b8162000143565b8114620001a757600080fd5b50565b620001b58162000157565b8114620001c157600080fd5b50565b611b3480620001d46000396000f3fe6080604052600436106100e85760003560e01c8063893d20e81161008a578063b63ed40511610059578063b63ed4051461027c578063be4b1772146102a7578063c6fd1020146102d0578063fc0c546a146102fb576100e8565b8063893d20e8146101f15780638da5cb5b1461021c578063a482171914610247578063b2e18d5814610251576100e8565b80632969d202116100c65780632969d2021461014957806330de599914610174578063317d94531461019d578063625a32e9146101c8576100e8565b8063144fa6d7146100ed57806315488b88146101165780632397e4d714610120575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190610ffd565b610326565b005b61011e6103fa565b005b34801561012c57600080fd5b506101476004803603810190610142919061102a565b610414565b005b34801561015557600080fd5b5061015e6105fb565b60405161016b9190611531565b60405180910390f35b34801561018057600080fd5b5061019b6004803603810190610196919061102a565b610601565b005b3480156101a957600080fd5b506101b261069b565b6040516101bf9190611531565b60405180910390f35b3480156101d457600080fd5b506101ef60048036038101906101ea91906110c4565b610754565b005b3480156101fd57600080fd5b5061020661088b565b6040516102139190611310565b60405180910390f35b34801561022857600080fd5b506102316108b5565b60405161023e9190611310565b60405180910390f35b61024f6108db565b005b34801561025d57600080fd5b50610266610a17565b6040516102739190611531565b60405180910390f35b34801561028857600080fd5b50610291610a1d565b60405161029e9190611531565b60405180910390f35b3480156102b357600080fd5b506102ce60048036038101906102c99190611084565b610a26565b005b3480156102dc57600080fd5b506102e5610b51565b6040516102f29190611310565b60405180910390f35b34801561030757600080fd5b50610310610b59565b60405161031d91906113b4565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ad90611491565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3460008082825461040b919061157e565b92505081905550565b60008111610457576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044e906114d1565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e336104a0610b51565b6040518363ffffffff1660e01b81526004016104bd92919061132b565b60206040518083038186803b1580156104d557600080fd5b505afa1580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d9190611057565b905081811015610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054990611451565b60405180910390fd5b6105a83361055e610b51565b84600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610b7f909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff166108fc6105cb84610c08565b9081150290604051600060405180830381858888f193505050501580156105f6573d6000803e3d6000fd5b505050565b60005481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610691576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068890611491565b60405180910390fd5b8060018190555050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082316106e3610b51565b6040518263ffffffff1660e01b81526004016106ff9190611310565b60206040518083038186803b15801561071757600080fd5b505afa15801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f9190611057565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db90611491565b60405180910390fd5b6000548210610828576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081f90611411565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561086e573d6000803e3d6000fd5b5081600080828254610880919061165f565b925050819055505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000349050600154811015610925576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091c90611431565b60405180910390fd5b61092d61069b565b61093682610c1f565b1115610977576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096e90611511565b60405180910390fd5b61098081610c36565b6109bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b690611471565b60405180910390fd5b610a14336109cc83610c1f565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c4f9092919063ffffffff16565b50565b60015481565b60008054905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aad90611491565b60405180910390fd5b610abe61069b565b821115610b00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af790611411565b60405180910390fd5b610b4d8183600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610c4f9092919063ffffffff16565b5050565b600030905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c02846323b872dd60e01b858585604051602401610ba093929190611354565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610cd5565b50505050565b600060015482610c189190611605565b9050919050565b600060015482610c2f91906115d4565b9050919050565b60008060015483610c479190611768565b149050919050565b610cd08363a9059cbb60e01b8484604051602401610c6e92919061138b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610cd5565b505050565b6000610d37826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610d9c9092919063ffffffff16565b9050600081511115610d975780806020019051810190610d579190610fd0565b610d96576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8d906114f1565b60405180910390fd5b5b505050565b6060610dab8484600085610db4565b90509392505050565b606082471015610df9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df0906113f1565b60405180910390fd5b610e0285610ec8565b610e41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e38906114b1565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610e6a91906112f9565b60006040518083038185875af1925050503d8060008114610ea7576040519150601f19603f3d011682016040523d82523d6000602084013e610eac565b606091505b5091509150610ebc828286610eeb565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610efb57829050610f4b565b600083511115610f0e5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4291906113cf565b60405180910390fd5b9392505050565b600081359050610f6181611a8b565b92915050565b600081359050610f7681611aa2565b92915050565b600081519050610f8b81611ab9565b92915050565b600081359050610fa081611ad0565b92915050565b600081359050610fb581611ae7565b92915050565b600081519050610fca81611ae7565b92915050565b600060208284031215610fe657610fe56117f7565b5b6000610ff484828501610f7c565b91505092915050565b600060208284031215611013576110126117f7565b5b600061102184828501610f91565b91505092915050565b6000602082840312156110405761103f6117f7565b5b600061104e84828501610fa6565b91505092915050565b60006020828403121561106d5761106c6117f7565b5b600061107b84828501610fbb565b91505092915050565b6000806040838503121561109b5761109a6117f7565b5b60006110a985828601610fa6565b92505060206110ba85828601610f52565b9150509250929050565b600080604083850312156110db576110da6117f7565b5b60006110e985828601610fa6565b92505060206110fa85828601610f67565b9150509250929050565b61110d81611693565b82525050565b600061111e8261154c565b6111288185611562565b9350611138818560208601611735565b80840191505092915050565b61114d816116ff565b82525050565b600061115e82611557565b611168818561156d565b9350611178818560208601611735565b611181816117fc565b840191505092915050565b600061119960268361156d565b91506111a48261180d565b604082019050919050565b60006111bc60128361156d565b91506111c78261185c565b602082019050919050565b60006111df60278361156d565b91506111ea82611885565b604082019050919050565b600061120260218361156d565b915061120d826118d4565b604082019050919050565b6000611225601f8361156d565b915061123082611923565b602082019050919050565b600061124860258361156d565b91506112538261194c565b604082019050919050565b600061126b601d8361156d565b91506112768261199b565b602082019050919050565b600061128e602a8361156d565b9150611299826119c4565b604082019050919050565b60006112b1602a8361156d565b91506112bc82611a13565b604082019050919050565b60006112d460208361156d565b91506112df82611a62565b602082019050919050565b6112f3816116f5565b82525050565b60006113058284611113565b915081905092915050565b60006020820190506113256000830184611104565b92915050565b60006040820190506113406000830185611104565b61134d6020830184611104565b9392505050565b60006060820190506113696000830186611104565b6113766020830185611104565b61138360408301846112ea565b949350505050565b60006040820190506113a06000830185611104565b6113ad60208301846112ea565b9392505050565b60006020820190506113c96000830184611144565b92915050565b600060208201905081810360008301526113e98184611153565b905092915050565b6000602082019050818103600083015261140a8161118c565b9050919050565b6000602082019050818103600083015261142a816111af565b9050919050565b6000602082019050818103600083015261144a816111d2565b9050919050565b6000602082019050818103600083015261146a816111f5565b9050919050565b6000602082019050818103600083015261148a81611218565b9050919050565b600060208201905081810360008301526114aa8161123b565b9050919050565b600060208201905081810360008301526114ca8161125e565b9050919050565b600060208201905081810360008301526114ea81611281565b9050919050565b6000602082019050818103600083015261150a816112a4565b9050919050565b6000602082019050818103600083015261152a816112c7565b9050919050565b600060208201905061154660008301846112ea565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611589826116f5565b9150611594836116f5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115c9576115c8611799565b5b828201905092915050565b60006115df826116f5565b91506115ea836116f5565b9250826115fa576115f96117c8565b5b828204905092915050565b6000611610826116f5565b915061161b836116f5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561165457611653611799565b5b828202905092915050565b600061166a826116f5565b9150611675836116f5565b92508282101561168857611687611799565b5b828203905092915050565b600061169e826116d5565b9050919050565b60006116b0826116d5565b9050919050565b60008115159050919050565b60006116ce82611693565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061170a82611711565b9050919050565b600061171c82611723565b9050919050565b600061172e826116d5565b9050919050565b60005b83811015611753578082015181840152602081019050611738565b83811115611762576000848401525b50505050565b6000611773826116f5565b915061177e836116f5565b92508261178e5761178d6117c8565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b7f546865206d696e696d756d20616d6f756e7420746f20627579206973206e6f7460008201527f20656e6f75676800000000000000000000000000000000000000000000000000602082015250565b7f54686520746f6b656e20616c6c6f77616e6365206973206e6f7420656e6f756760008201527f6800000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c792077686f6c6520746f6b656e732063616e20626520626f7567687400600082015250565b7f4f6e6c79206f776e65722063616e20706572666f726d2074686973206f70657260008201527f6174696f6e000000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f54686520616d6f756e74206f6620746f6b656e7320746f2073656c6c20636f7560008201527f6c646e2774206265203000000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f75676820746f6b656e7320696e207468652072657365727665600082015250565b611a9481611693565b8114611a9f57600080fd5b50565b611aab816116a5565b8114611ab657600080fd5b50565b611ac2816116b7565b8114611acd57600080fd5b50565b611ad9816116c3565b8114611ae457600080fd5b50565b611af0816116f5565b8114611afb57600080fd5b5056fea2646970667358221220e7d180c39ae9c1a6e0ce5fd4d8b606443e1a4bd86c19a1e8b61db245513c7b8a64736f6c63430008070033";

type ExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Exchange__factory extends ContractFactory {
  constructor(...args: ExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Exchange> {
    return super.deploy(_owner, _token, overrides || {}) as Promise<Exchange>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _token, overrides || {});
  }
  override attach(address: string): Exchange {
    return super.attach(address) as Exchange;
  }
  override connect(signer: Signer): Exchange__factory {
    return super.connect(signer) as Exchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeInterface {
    return new utils.Interface(_abi) as ExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Exchange {
    return new Contract(address, _abi, signerOrProvider) as Exchange;
  }
}
