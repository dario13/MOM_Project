/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Exchange, ExchangeInterface } from "../../contracts/Exchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Bought",
    type: "event",
  },
  {
    inputs: [],
    name: "buyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "depositWei",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWeiBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumAmountToExchange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimumAmountToExchange",
        type: "uint256",
      },
    ],
    name: "setMinimumAmountToExchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weiBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "destAddr",
        type: "address",
      },
    ],
    name: "withdrawWei",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e1538038062001e158339818101604052810190620000379190620000fc565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550655af3107a40006001819055505050620001c4565b600081519050620000df8162000190565b92915050565b600081519050620000f681620001aa565b92915050565b600080604083850312156200011657620001156200018b565b5b60006200012685828601620000ce565b92505060206200013985828601620000e5565b9150509250929050565b600062000150826200016b565b9050919050565b6000620001648262000143565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200019b8162000143565b8114620001a757600080fd5b50565b620001b58162000157565b8114620001c157600080fd5b50565b611c4180620001d46000396000f3fe6080604052600436106100e85760003560e01c8063893d20e81161008a578063b63ed40511610059578063b63ed4051461027c578063be4b1772146102a7578063c6fd1020146102d0578063fc0c546a146102fb576100e8565b8063893d20e8146101f15780638da5cb5b1461021c578063a482171914610247578063b2e18d5814610251576100e8565b80632969d202116100c65780632969d2021461014957806330de599914610174578063317d94531461019d578063625a32e9146101c8576100e8565b8063144fa6d7146100ed57806315488b88146101165780632397e4d714610120575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190611063565b610326565b005b61011e6103fa565b005b34801561012c57600080fd5b5061014760048036038101906101429190611090565b610414565b005b34801561015557600080fd5b5061015e610661565b60405161016b9190611612565b60405180910390f35b34801561018057600080fd5b5061019b60048036038101906101969190611090565b610667565b005b3480156101a957600080fd5b506101b2610701565b6040516101bf9190611612565b60405180910390f35b3480156101d457600080fd5b506101ef60048036038101906101ea919061112a565b6107ba565b005b3480156101fd57600080fd5b506102066108f1565b60405161021391906113d1565b60405180910390f35b34801561022857600080fd5b5061023161091b565b60405161023e91906113d1565b60405180910390f35b61024f610941565b005b34801561025d57600080fd5b50610266610a7d565b6040516102739190611612565b60405180910390f35b34801561028857600080fd5b50610291610a83565b60405161029e9190611612565b60405180910390f35b3480156102b357600080fd5b506102ce60048036038101906102c991906110ea565b610a8c565b005b3480156102dc57600080fd5b506102e5610bb7565b6040516102f291906113d1565b60405180910390f35b34801561030757600080fd5b50610310610bbf565b60405161031d9190611475565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ad90611572565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3460008082825461040b919061165f565b92505081905550565b60008111610457576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044e906115b2565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e336104a0610bb7565b6040518363ffffffff1660e01b81526004016104bd9291906113ec565b60206040518083038186803b1580156104d557600080fd5b505afa1580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d91906110bd565b905081811015610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054990611532565b60405180910390fd5b6105a83361055e610bb7565b84600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610be5909392919063ffffffff16565b60003373ffffffffffffffffffffffffffffffffffffffff166105ca84610c6e565b6040516105d6906113bc565b60006040518083038185875af1925050503d8060008114610613576040519150601f19603f3d011682016040523d82523d6000602084013e610618565b606091505b505090508061065c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610653906114b2565b60405180910390fd5b505050565b60005481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ee90611572565b60405180910390fd5b8060018190555050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231610749610bb7565b6040518263ffffffff1660e01b815260040161076591906113d1565b60206040518083038186803b15801561077d57600080fd5b505afa158015610791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b591906110bd565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461084a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084190611572565b60405180910390fd5b600054821061088e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610885906114f2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156108d4573d6000803e3d6000fd5b50816000808282546108e69190611740565b925050819055505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600034905060015481101561098b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098290611512565b60405180910390fd5b610993610701565b61099c82610c85565b11156109dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d4906115f2565b60405180910390fd5b6109e681610c9c565b610a25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1c90611552565b60405180910390fd5b610a7a33610a3283610c85565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cb59092919063ffffffff16565b50565b60015481565b60008054905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1390611572565b60405180910390fd5b610b24610701565b821115610b66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5d906114f2565b60405180910390fd5b610bb38183600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cb59092919063ffffffff16565b5050565b600030905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c68846323b872dd60e01b858585604051602401610c0693929190611415565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d3b565b50505050565b600060015482610c7e91906116e6565b9050919050565b600060015482610c9591906116b5565b9050919050565b60008060015483610cad9190611849565b149050919050565b610d368363a9059cbb60e01b8484604051602401610cd492919061144c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d3b565b505050565b6000610d9d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610e029092919063ffffffff16565b9050600081511115610dfd5780806020019051810190610dbd9190611036565b610dfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df3906115d2565b60405180910390fd5b5b505050565b6060610e118484600085610e1a565b90509392505050565b606082471015610e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e56906114d2565b60405180910390fd5b610e6885610f2e565b610ea7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9e90611592565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610ed091906113a5565b60006040518083038185875af1925050503d8060008114610f0d576040519150601f19603f3d011682016040523d82523d6000602084013e610f12565b606091505b5091509150610f22828286610f51565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610f6157829050610fb1565b600083511115610f745782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa89190611490565b60405180910390fd5b9392505050565b600081359050610fc781611b98565b92915050565b600081359050610fdc81611baf565b92915050565b600081519050610ff181611bc6565b92915050565b60008135905061100681611bdd565b92915050565b60008135905061101b81611bf4565b92915050565b60008151905061103081611bf4565b92915050565b60006020828403121561104c5761104b6118d8565b5b600061105a84828501610fe2565b91505092915050565b600060208284031215611079576110786118d8565b5b600061108784828501610ff7565b91505092915050565b6000602082840312156110a6576110a56118d8565b5b60006110b48482850161100c565b91505092915050565b6000602082840312156110d3576110d26118d8565b5b60006110e184828501611021565b91505092915050565b60008060408385031215611101576111006118d8565b5b600061110f8582860161100c565b925050602061112085828601610fb8565b9150509250929050565b60008060408385031215611141576111406118d8565b5b600061114f8582860161100c565b925050602061116085828601610fcd565b9150509250929050565b61117381611774565b82525050565b60006111848261162d565b61118e8185611643565b935061119e818560208601611816565b80840191505092915050565b6111b3816117e0565b82525050565b60006111c482611638565b6111ce818561164e565b93506111de818560208601611816565b6111e7816118dd565b840191505092915050565b60006111ff60148361164e565b915061120a826118ee565b602082019050919050565b600061122260268361164e565b915061122d82611917565b604082019050919050565b600061124560128361164e565b915061125082611966565b602082019050919050565b600061126860278361164e565b91506112738261198f565b604082019050919050565b600061128b60218361164e565b9150611296826119de565b604082019050919050565b60006112ae601f8361164e565b91506112b982611a2d565b602082019050919050565b60006112d160258361164e565b91506112dc82611a56565b604082019050919050565b60006112f4600083611643565b91506112ff82611aa5565b600082019050919050565b6000611317601d8361164e565b915061132282611aa8565b602082019050919050565b600061133a602a8361164e565b915061134582611ad1565b604082019050919050565b600061135d602a8361164e565b915061136882611b20565b604082019050919050565b600061138060208361164e565b915061138b82611b6f565b602082019050919050565b61139f816117d6565b82525050565b60006113b18284611179565b915081905092915050565b60006113c7826112e7565b9150819050919050565b60006020820190506113e6600083018461116a565b92915050565b6000604082019050611401600083018561116a565b61140e602083018461116a565b9392505050565b600060608201905061142a600083018661116a565b611437602083018561116a565b6114446040830184611396565b949350505050565b6000604082019050611461600083018561116a565b61146e6020830184611396565b9392505050565b600060208201905061148a60008301846111aa565b92915050565b600060208201905081810360008301526114aa81846111b9565b905092915050565b600060208201905081810360008301526114cb816111f2565b9050919050565b600060208201905081810360008301526114eb81611215565b9050919050565b6000602082019050818103600083015261150b81611238565b9050919050565b6000602082019050818103600083015261152b8161125b565b9050919050565b6000602082019050818103600083015261154b8161127e565b9050919050565b6000602082019050818103600083015261156b816112a1565b9050919050565b6000602082019050818103600083015261158b816112c4565b9050919050565b600060208201905081810360008301526115ab8161130a565b9050919050565b600060208201905081810360008301526115cb8161132d565b9050919050565b600060208201905081810360008301526115eb81611350565b9050919050565b6000602082019050818103600083015261160b81611373565b9050919050565b60006020820190506116276000830184611396565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061166a826117d6565b9150611675836117d6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116aa576116a961187a565b5b828201905092915050565b60006116c0826117d6565b91506116cb836117d6565b9250826116db576116da6118a9565b5b828204905092915050565b60006116f1826117d6565b91506116fc836117d6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117355761173461187a565b5b828202905092915050565b600061174b826117d6565b9150611756836117d6565b9250828210156117695761176861187a565b5b828203905092915050565b600061177f826117b6565b9050919050565b6000611791826117b6565b9050919050565b60008115159050919050565b60006117af82611774565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117eb826117f2565b9050919050565b60006117fd82611804565b9050919050565b600061180f826117b6565b9050919050565b60005b83811015611834578082015181840152602081019050611819565b83811115611843576000848401525b50505050565b6000611854826117d6565b915061185f836117d6565b92508261186f5761186e6118a9565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b7f546865206d696e696d756d20616d6f756e7420746f20627579206973206e6f7460008201527f20656e6f75676800000000000000000000000000000000000000000000000000602082015250565b7f54686520746f6b656e20616c6c6f77616e6365206973206e6f7420656e6f756760008201527f6800000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c792077686f6c6520746f6b656e732063616e20626520626f7567687400600082015250565b7f4f6e6c79206f776e65722063616e20706572666f726d2074686973206f70657260008201527f6174696f6e000000000000000000000000000000000000000000000000000000602082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f54686520616d6f756e74206f6620746f6b656e7320746f2073656c6c20636f7560008201527f6c646e2774206265203000000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f75676820746f6b656e7320696e207468652072657365727665600082015250565b611ba181611774565b8114611bac57600080fd5b50565b611bb881611786565b8114611bc357600080fd5b50565b611bcf81611798565b8114611bda57600080fd5b50565b611be6816117a4565b8114611bf157600080fd5b50565b611bfd816117d6565b8114611c0857600080fd5b5056fea26469706673582212206335bf35fb9d30400bf124d10c61e3998ad202da4373a716b8cee7584552631364736f6c63430008070033";

type ExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Exchange__factory extends ContractFactory {
  constructor(...args: ExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Exchange> {
    return super.deploy(_owner, _token, overrides || {}) as Promise<Exchange>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, _token, overrides || {});
  }
  override attach(address: string): Exchange {
    return super.attach(address) as Exchange;
  }
  override connect(signer: Signer): Exchange__factory {
    return super.connect(signer) as Exchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeInterface {
    return new utils.Interface(_abi) as ExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Exchange {
    return new Contract(address, _abi, signerOrProvider) as Exchange;
  }
}
